/obj/machinery
	var/datum/sound_token/working_sound_token //autogenerated, don't touch unless you know what you're doing
	var/working_sound_id //same as above

	var/list/working_sounds //Duh looped sound
	var/working_volume //Adjust as required

	var/list/action_sound //Extra stuff, not required
	var/startup_sound
	var/shutdown_sound

/obj/machinery/proc/play_working_soundloop()
	if(!working_sounds)
		return
	if(!working_sound_token)
		if(startup_sound)
			playsound(src, startup_sound, (working_volume+5), TRUE)
			addtimer(new Callback(src, PROC_REF(assign_working_sound_token), length(startup_sound)))
		else
			assign_working_sound_token()

/obj/machinery/proc/assign_working_sound_token()
	if(!working_sound_id)
		working_sound_id = "[type]_[sequential_id(type)]"
	working_sound_token = GLOB.sound_player.PlayLoopingSound(src, working_sound_id, pick(working_sounds), working_volume, 10, 1)
	working_sound_token.SetVolume(working_volume)

/obj/machinery/proc/stop_working_soundloop()
	if(working_sound_token)
		QDEL_NULL(working_sound_token)
		if(shutdown_sound)
			playsound(src, shutdown_sound, working_volume+5, 5)

/obj/machinery/proc/play_action_sound()
	playsound(src, (pick(action_sound)), (working_volume+15), TRUE)
